#!/bin/bash
# -----------------------------------------------------------------------------
set -euo pipefail # Stop running the script on first error...
# -----------------------------------------------------------------------------
source .env

scale_up() {
    # Scale it up to multiple replicas
    kubectl scale deployment ${PROJECT} --replicas=3 -o yaml | kubectl apply --wait -f -
    kubectl wait --for=condition=available --timeout=600s deployment/${PROJECT} -n default
    kubectl get pods
}

scale_down() {
    # Scale it back down to one
    kubectl scale deployment ${PROJECT} --replicas=1 -o yaml | kubectl apply --wait -f -
    kubectl wait --for=condition=available --timeout=600s deployment/${PROJECT} -n default
    kubectl get pods
}

case ${1:-} in
  up)
    scale_up
    ;;
  down)
    scale_down
    ;;
  test)
    scale_up
    sleep 60
    scale_down
    ;;
  *)
    echo ""
    echo "WarningCommand requires an action:"
    echo " $0 [ up | down | test ] "
    echo ""
    exit 1
    ;;
esac